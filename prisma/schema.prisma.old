// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Types {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  Cards     Cards[]
  condition Condition[]
}

model Classes {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  cards      Cards[]
  conditions Condition[]
}

model Skill {
  id             Int             @id @default(autoincrement())
  name           String
  description    String
  type           String
  effect         String
  value          Int
  cards          ActiveSkills[]
  passive_skills PassiveSkills[]
}

model Competence {
  id             Int             @id @default(autoincrement())
  name           String
  description    String
  type           String
  effect         String
  value          Int
  cards          ActiveSkills[]
  passive_skills PassiveSkills[]
}

model ActiveSkills {
  id            Int        @id @default(autoincrement())
  skill_id      Int
  skill         Skill      @relation(fields: [skill_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  competence_id Int
  competence    Competence @relation(fields: [competence_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  card_id       Int
  card          Cards      @relation(fields: [card_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  mana_cost     Int
}

model PassiveSkills {
  id           Int        @id @default(autoincrement())
  skill_id     Int
  skill        Skill      @relation(fields: [skill_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  cards        Cards[]
  Competence   Competence @relation(fields: [competenceId], references: [id])
  competenceId Int
}

model Condition {
  id          Int     @id @default(autoincrement())
  nom         String
  description String
  type_id     Int
  type        Types   @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  class_id    Int
  class       Classes @relation(fields: [class_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Cards {
  id               Int            @id @default(autoincrement())
  name             String         @unique
  image            String
  power            Int
  type_id          Int
  type             Types          @relation(fields: [type_id], references: [id])
  class_id         Int
  class            Classes        @relation(fields: [class_id], references: [id])
  active_skills    ActiveSkills[]
  passive_skill_id Int
  passive_skill    PassiveSkills  @relation(fields: [passive_skill_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
}
